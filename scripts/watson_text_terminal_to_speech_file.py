# -*- coding: utf-8 -*-
"""Watson_Text_To_Speech.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P6RIoMY8U2baGUH_oSjKWqA6u79AjLxj

# Watson Text To Speech

Os exemplos abaixo mostram como utilizar a API do Watson Text To Speech
"""

# !pip install ibm-watson

from ibm_watson import TextToSpeechV1
from ibm_cloud_sdk_core.authenticators import IAMAuthenticator
import json
import os
"""Inicialmente, criamos o serviço com os dados de autenticação:"""

authenticator = IAMAuthenticator(os.getenv('API_TEXT_TO_SPEECH'))
tts = TextToSpeechV1(
    authenticator=authenticator
)

"""A seguir, vamos sintetizar uma frase e gravar o resultado em um arquivo de áudio wav. Aqui é importante informar, além da sentença, qual a voz que queremos usar e qual o formato da saída do arquivo de áudio. A voz é específica para cada idioma, pois a transcrição de pronúncia é específica da voz e do idioma. Vamos usar uma voz pt-BR para sintetizar textos em português."""

texto = input('Por favor digite o texto que deseja converter em arquivo de áudio\n\n')

with open('audio.wav', 'wb') as audio_file:
    content = tts.synthesize(
        texto,
        voice='pt-BR_IsabelaVoice',
        accept='audio/wav'
    ).get_result().content
    audio_file.write(content)

# import IPython
# IPython.display.Audio("audio.wav")

"""A API nos permite ver o resultado interno da análise de texto feita pelo sistema, isto é, nos retornar a lista de fones utilizadas para a síntese de fala. Para isso, usamos o método get_pronunciation informando o texto, assim como a voz que será responsável por gerar a lista de pronúncia. Informamos também o formato da lista de fones: ipa para o International Pronunciation Alphabet ou ibm para usar o IBM Symbolic Phonetic Representation, alfabeto de pronúncias proprietário da IBM. Vamos selecionar o IPA para retornar a lista de fones."""

# pronunciation = tts.get_pronunciation(
#     'Olá pessoal',
#     voice='pt-BR_IsabelaVoice',
#     format='ipa'
# ).get_result()
# print(json.dumps(pronunciation, indent=2))

